h3 14. Source Control with GIT

h5 Prerequisite
p You have to have GIT installed on your machine.

h5 Add production start section to package.json file
p Update "scripts" section of the
  code.text-info  package.json
  span  file to contain following:

div.card.bg-light.card-body
  pre.text-info.
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1",
      "start": "node index.js"
    },

h5 Initilise local GIT repository
p In command prompt window, go to your project directory and type
  code.text-info  git init
p This will initialise your git repository. And you will get
  code.text-info  Initialized empty Git repository...
  span  message back.  Check the status by typing
  code.text-info  git status
  span  at any time.

h5 Create .gitignore file
p Create
  code.text-info  .gitignore
  span  file in your project directory.  Use this file to specify files
  span  and/or directories you do not want to publish. For example, to exclude
  code.text-info  myNotes.txt
  span  file and
  code.text-info  /myNotes
  span  folder add following lines to the
  code.text-info  .gitignore
  span  file:

  div.card.bg-light.card-body
    pre.text-info.
      myNotes.txt
      /myNotes

h5 Add all files to GIT staging
p Type
  code.text-info  git add .
  span  in command prompt at the root of your project directory.  This will take
  span  some time and you will see a lot of warnings like
  code.text-info  warning: LF will be replaced by CRLF in package.json
  span , which you can ignore. Type
  code.text-info  git status
  span  to check status.

h5 Commit
p Type
  code.text-info  git commit -m "1st commit from local"
  span  in command prompt at the root of your project directory.
  span  This will commit all your changes. Type
  code.text-info  git status
  span  to check status.
